{"ast":null,"code":"import instance from 'src/app/axios/axios';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/data.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"ng-apexcharts\";\nconst _c0 = [\"chart\"];\nexport let Chartcolum = /*#__PURE__*/(() => {\n  class Chartcolum {\n    star(value) {\n      this.currentDate = value;\n      this.start = Math.round(Date.parse(value) / 1000);\n    }\n    endd(value) {\n      this.currentDate = value;\n      this.end = Math.round(Date.parse(value) / 1000);\n    }\n    constructor(d, router) {\n      this.d = d;\n      this.router = router;\n      this.title = 'chartcolum';\n      this.bien = [];\n      this.bien1 = [];\n      this.today = new Date();\n      this.year = this.today.getFullYear();\n      this.month = ('0' + (this.today.getMonth() + 1)).slice(-2);\n      this.day = ('0' + this.today.getDate()).slice(-2);\n      this.currentDate = this.year + '-' + this.month + '-' + this.day;\n      this.chartOptions = {\n        series: [],\n        chart: {\n          height: 350,\n          type: 'line',\n          toolbar: {\n            show: false\n          }\n        },\n        title: {\n          text: 'LOCATION'\n        },\n        dataLabels: {\n          enabled: true,\n          enabledOnSeries: [1]\n        },\n        xaxis: {\n          type: 'datetime'\n        }\n      };\n    }\n    ngOnInit() {\n      const bien = [];\n      const bien1 = [];\n      instance.get(`http://ec2-43-207-102-176.ap-northeast-1.compute.amazonaws.com:5000/dashboard?startDate=1686817421000&endDate=1688199821000&name=locations`).then(response => {\n        for (let i = 0; i < response.data.data.length; i++) {\n          bien.push(response.data.data[i].count);\n          bien1.push(response.data.data[i].timeline);\n        }\n        console.log(this.bien1);\n        this.chartOptions.series = [{\n          data: bien\n        }];\n        this.chartOptions.xaxis = {\n          categories: bien1\n        };\n      }).catch(error => {});\n    }\n  }\n  Chartcolum.ɵfac = function Chartcolum_Factory(t) {\n    return new (t || Chartcolum)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  Chartcolum.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Chartcolum,\n    selectors: [[\"chartcolum\"]],\n    viewQuery: function Chartcolum_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chart = _t.first);\n      }\n    },\n    decls: 6,\n    vars: 12,\n    consts: [[\"id\", \"chart\"], [\"name\", \"startDate\", \"type\", \"date\", \"max\", \"2023-07-01\", 1, \"search-input_extra_content\", 3, \"ngModel\", \"change\"], [\"start\", \"ngModel\"], [\"name\", \"startDate\", \"type\", \"date\", \"max\", \"2023-07-01\", 1, \"search-input_extra_content1\", 3, \"ngModel\", \"change\"], [\"end\", \"ngModel\"], [3, \"series\", \"chart\", \"yaxis\", \"xaxis\", \"labels\", \"stroke\", \"title\", \"dataLabels\", \"fill\", \"tooltip\"]],\n    template: function Chartcolum_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"input\", 1, 2);\n        i0.ɵɵlistener(\"change\", function Chartcolum_Template_input_change_1_listener() {\n          i0.ɵɵrestoreView(_r2);\n          const _r0 = i0.ɵɵreference(2);\n          return i0.ɵɵresetView(ctx.star(_r0.value));\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"input\", 3, 4);\n        i0.ɵɵlistener(\"change\", function Chartcolum_Template_input_change_3_listener() {\n          i0.ɵɵrestoreView(_r2);\n          const _r1 = i0.ɵɵreference(4);\n          return i0.ɵɵresetView(ctx.endd(_r1.value));\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"apx-chart\", 5);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.currentDate);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.currentDate);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"series\", ctx.chartOptions.series)(\"chart\", ctx.chartOptions.chart)(\"yaxis\", ctx.chartOptions.yaxis)(\"xaxis\", ctx.chartOptions.xaxis)(\"labels\", ctx.chartOptions.labels)(\"stroke\", ctx.chartOptions.stroke)(\"title\", ctx.chartOptions.title)(\"dataLabels\", ctx.chartOptions.dataLabels)(\"fill\", ctx.chartOptions.fill)(\"tooltip\", ctx.chartOptions.tooltip);\n      }\n    },\n    dependencies: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.ChartComponent],\n    styles: [\"#chart[_ngcontent-%COMP%]{max-width:900px;margin:35px auto}.search-input_extra_content[_ngcontent-%COMP%]{position:absolute;left:78%;top:40%;height:30px;width:8%}.search-input_extra_content1[_ngcontent-%COMP%]{position:absolute;left:87%;top:40%;height:30px;width:8%}\"]\n  });\n  return Chartcolum;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}